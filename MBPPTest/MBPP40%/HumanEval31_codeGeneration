CodeGeneration:
Here's the completed function with the docstring:

```python
def move_zero(num_list):
    """
    Move all zeros to the end of the list while maintaining the order of non-zero elements.
    
    Args:
        num_list (list): List of integers that may contain zeros
        
    Returns:
        list: A new list with all zeros moved to the end, preserving the order of non-zero elements
        
    Example:
        >>> move_zero([1, 0, 3, 0, 5])
        [1, 3, 5, 0, 0]
        >>> move_zero([0, 1, 0, 2, 3])
        [1, 2, 3, 0, 0]
    """
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i != 0]
    x.extend(a)
    return (x)
```

The function works as follows:
1. `num_list.count(0)` counts how many zeros are in the input list
2. `[0 for i in range(num_list.count(0))]` creates a list containing that many zeros
3. `[i for i in num_list if i != 0]` creates a new list with all non-zero elements in their original order
4. `x.extend(a)` appends the zeros to the end of the non-zero list
5. Returns the final list with zeros moved to the end
