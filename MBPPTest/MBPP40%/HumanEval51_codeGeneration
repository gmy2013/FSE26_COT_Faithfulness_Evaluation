CodeGeneration:
ned list `temp` contains tuples (since the original matrix elements are tuples).
4. Use `zip(*temp)` to transpose the list of tuples, effectively grouping all first elements together, all second elements together, etc.
5. Convert the result to a string and return it.

Here is the complete function:

```python
def matrix_to_list(test_list):
    """
    Converts a matrix (list of lists of tuples) into a transposed list of tuples and returns as string.
    
    Args:
        test_list (list): A matrix represented as a list of lists, where each element is a tuple.
    
    Returns:
        str: String representation of the transposed list of tuples.
    
    Example:
        >>> matrix_to_list([[(1, 2), (3, 4)], [(5, 6), (7, 8)]])
        '[(1, 3, 5, 7), (2, 4, 6, 8)]'
    """
    temp = [ele for sub in test_list for ele in sub]
    res = list(zip(*temp))
    return str(res)
```
