def count_Fac(n):  
    m = n 
    count = 0
    i = 2
    while((i * i) <= m): 
        total = 0
        while (n % i == 0): 
            n /= i 
            total += 1 
        temp = 0
        j = 1
        while((temp + j) <= total): 
            temp += j 
            count += 1
            j += 1 
        i += 1
    if (n != 1): 
        count += 1 
    return count 
The following is chain of thought:
Here is the structured chain of thought for the count_Fac function:

1. **Initialize variables**: 
   - Store original n in m for reference
   - Initialize count to track total factors
   - Start with the first prime factor i=2

2. **Outer loop for prime factorization**:
   - Iterate through potential prime factors up to âˆšm
   - For each prime factor i, check if it divides n

3. **Inner loop for counting occurrences**:
   - For each prime factor i, count how many times it divides n