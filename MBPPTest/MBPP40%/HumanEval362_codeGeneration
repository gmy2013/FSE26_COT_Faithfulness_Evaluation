CodeGeneration:
discriminant formula.
5. The function returns a tuple containing a string describing the number of solutions and the discriminant value.
6. The logic correctly handles:
   - discriminant > 0: two real solutions
   - discriminant == 0: one real solution
   - discriminant < 0: no real solutions

Here's the complete function:

```python
def discriminant_value(x, y, z):
    """
    Calculate the discriminant of a quadratic equation and determine the nature of its roots.
    
    The quadratic equation is assumed to be in the form: x*tÂ² + y*t + z = 0
    
    Args:
        x (float): Coefficient of the quadratic term (a)
        y (float): Coefficient of the linear term (b) 
        z (float): Constant term (c)
    
    Returns:
        tuple: A tuple containing:
            - str: Description of the number of real solutions
            - float: The calculated discriminant value
    
    Examples:
        >>> discriminant_value(1, -3, 2)
        ('Two solutions', 1.0)
        
        >>> discriminant_value(1, -2, 1)
        ('one solution', 0.0)
        
        >>> discriminant_value(1, 0, 1)
        ('no real solution', -4.0)
    """
    discriminant = (y**2) - (4*x*z)
    if discriminant > 0:
        return ("Two solutions", discriminant)
    elif discriminant == 0:
        return ("one solution", discriminant)
    elif discriminant < 0:
        return ("no real solution", discriminant)
```
