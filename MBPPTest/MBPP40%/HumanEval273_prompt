def check_Concat(str1,str2):
    N = len(str1)
    M = len(str2)
    if (N % M != 0):
        return False
    for i in range(N):
        if (str1[i] != str2[i % M]):
            return False         
    return True
The following is chain of thought:
Here's the structured chain of thought for the `check_Concat` function:

1. **Function Purpose Analysis**: The function checks if `str1` can be formed by concatenating multiple copies of `str2`

2. **Length Validation**: 
   - Calculate lengths of both strings (N and M)
   - Check if N is divisible by M (N % M == 0)
   - If not divisible, immediately return False since concatenation is impossible

3. **Character-by-Character Verification**:
   - Iterate through eac