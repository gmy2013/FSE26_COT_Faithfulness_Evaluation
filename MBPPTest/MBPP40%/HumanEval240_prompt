def get_inv_count(arr, n): 
	inv_count = 0
	for i in range(n): 
		for j in range(i + 1, n): 
			if (arr[i] > arr[j]): 
				inv_count += 1
	return inv_count 
The following is chain of thought:
Here is the structured chain of thought for the given function:

1. **Function Purpose Analysis**: The function calculates the inversion count in an array, which counts pairs where a larger element appears before a smaller element.

2. **Initialization**: Initialize `inv_count` to 0 to start counting inversions.

3. **Nested Loop Structure**:
   - Outer loop iterates through each element from index 0 to n-1.
   - Inner loop iterates through all 