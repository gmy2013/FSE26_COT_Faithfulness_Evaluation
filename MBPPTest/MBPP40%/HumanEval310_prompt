def maximum_product(nums):
    import heapq
    a, b = heapq.nlargest(3, nums), heapq.nsmallest(2, nums)
    return max(a[0] * a[1] * a[2], a[0] * b[0] * b[1])
The following is chain of thought:
Here's the structured chain of thought for the maximum_product function:

1. **Problem Analysis**: The function needs to find the maximum product of three numbers from an array. The maximum product could come from either:
   - The three largest positive numbers
   - The two smallest negative numbers (which multiply to positive) and the largest positive number

2. **Data Structure Selection**: Using heapq module to efficiently find:
   - The three lar