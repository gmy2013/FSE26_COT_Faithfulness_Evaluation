CodeGeneration:
t to max_ending_here
4. If current subarray sum is greater than max_so_far, update max_so_far and the end index
5. If current subarray sum becomes negative, reset max_ending_here and move start pointer
6. Return the length of the maximum subarray (end - start + 1)

Here's the complete function:

```python
from sys import maxsize 

def max_sub_array_sum(a, size): 
    max_so_far = -maxsize - 1
    max_ending_here = 0
    start = 0
    end = 0
    s = 0
    
    for i in range(0, size): 
        max_ending_here += a[i] 
        
        if max_so_far < max_ending_here: 
            max_so_far = max_ending_here 
            start = s 
            end = i 
            
        if max_ending_here < 0: 
            max_ending_here = 0
            s = i + 1
    
    return (end - start + 1)
```

This function implements Kadane's algorithm to find the length of the contiguous subarray with the maximum sum. It tracks the starting and ending indices of the maximum subarray and returns the length by calculating `end - start + 1`.
