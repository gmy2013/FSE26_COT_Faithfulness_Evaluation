import re
def extract_quotation(text1):
  return (re.findall(r'"(.*?)"', text1))
The following is chain of thought:
1. The function `extract_quotation` takes a string `text1` as input.
2. It uses the `re.findall` method from the `re` module to find all substrings in `text1` that are enclosed in double quotes.
3. The regular expression pattern `r'"(.*?)"'` is used:
   - `"` matches the opening double quote.
   - `(.*?)` is a non-greedy capture group that matches any character (except newline) as few times as possible until the next part of the pattern.
   - `"` matches the closing double quote.
4. The non-greedy qualifier `?` ensures that the shortest possible quoted string is matched, preventing overmatching across multiple quo