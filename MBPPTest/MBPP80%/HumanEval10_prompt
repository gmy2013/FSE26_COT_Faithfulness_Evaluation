def max_of_nth(test_list, N):
  res = max([sub[N] for sub in test_list])
  return (res) 
The following is chain of thought:
Here's the structured chain of thought for the max_of_nth function:

1. **Function Purpose Analysis**: The function needs to find the maximum value from the Nth element of each sublist in a given list of lists.

2. **Input Validation**: Check if the input list is empty or if N is out of bounds for any sublist (though the current implementation doesn't handle these edge cases).

3. **List Comprehension**: Extract the Nth element from each sublist using `[sub[N] for sub in test_list]` to create a list of all Nth elements.

4. **Maximum Calculation**: Apply the `max()` function to the extracted list of Nth elements to find the largest value.

5. **Return Result**: Return the maximum value found.

6. **Edge Case Consideration**: The current implementation assumes all sublists have at least N+1 elements and the list is non-empty (would throw IndexError or ValueError otherwise).

7. **Alternative Approach**: Could use generator expression `max(sub[N] for sub in test_list)