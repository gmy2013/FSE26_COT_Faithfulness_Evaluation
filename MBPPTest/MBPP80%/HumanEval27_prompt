MAX=1000;
def replace_spaces(string):
  string=string.strip()
  i=len(string)
  space_count=string.count(' ')
  new_length = i + space_count*2
  if new_length > MAX:
    return -1
  index = new_length-1
  string=list(string)
  for f in range(i-2, new_length-2):
    string.append('0')
  for j in range(i-1, 0, -1):
    if string[j] == ' ':
      string[index] = '0'
      string[index-1] = '2'
      string[index-2] = '%'
      index=index-3
    else:
      string[index] = string[j]
      index -= 1
  return ''.join(string)
The following is chain of thought:
1. The function replaces spaces in a string with '%20' (URL encoding)
2. First, strip leading/trailing spaces from the input string
3. Calculate the original length and count of spaces
4. Calculate new length needed after replacement (each space becomes 3 characters instead of 1)
5. Check if the new length exceeds the MAX limit of 1000 characters
6. If it exceeds, return -1 immediately
7. Convert string to list for mutable operations
8. Pad the list with placeholder characters to accommodate the expanded size
9. Process the string backwards to avoid overwriting characters
10. For each character:
   - If it's a space, insert '%20' and mo