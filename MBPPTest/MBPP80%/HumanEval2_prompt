def get_ludic(n):
	ludics = []
	for i in range(1, n + 1):
		ludics.append(i)
	index = 1
	while(index != len(ludics)):
		first_ludic = ludics[index]
		remove_index = index + first_ludic
		while(remove_index < len(ludics)):
			ludics.remove(ludics[remove_index])
			remove_index = remove_index + first_ludic - 1
		index += 1
	return ludics
The following is chain of thought:
1. Initialize an empty list `ludics` to store the ludic numbers.
2. Populate `ludics` with all integers from 1 to n (inclusive).
3. Start with index = 1 (second element in the list, value 2).
4. While the current index is within the bounds of the list:
   a. Get the current ludic number at the index (`first_ludic`).
   b. Calculate the first removal index as `index + first_ludic`.
   c. While the removal index is within the list bounds:
      i. Remove the element at the removal index from the list.
      ii. Update the removal index by adding `first_ludic - 1` (since list 