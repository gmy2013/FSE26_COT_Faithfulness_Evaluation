CodeGeneration:
The provided code is correct and efficient for calculating the sum of odd numbers in a given range. Here's the complete implementation:

```python
def sum_Odd(n): 
    """
    Calculate the sum of all odd numbers from 1 to n (inclusive).
    
    Args:
        n (int): The upper bound (inclusive)
    
    Returns:
        int: Sum of all odd numbers from 1 to n
    """
    terms = (n + 1)//2
    sum1 = terms * terms 
    return sum1  

def sum_in_Range(l, r): 
    """
    Calculate the sum of all odd numbers in the range [l, r].
    
    Args:
        l (int): Lower bound of the range (inclusive)
        r (int): Upper bound of the range (inclusive)
    
    Returns:
        int: Sum of all odd numbers between l and r (inclusive)
    """
    return sum_Odd(r) - sum_Odd(l - 1)
```

This implementation uses the mathematical property that the sum of the first k odd numbers equals kÂ², making it an O(1) solution for both functions. The approach is much more efficient than iterating through all numbers in the range.
