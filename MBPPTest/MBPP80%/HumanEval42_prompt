import re
def text_match_wordz_middle(text):
        patterns = '\Bz\B'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return('Not matched!')
The following is chain of thought:
1. The function `text_match_wordz_middle` checks if the letter 'z' appears in the middle of a word (not at the start or end).
2. The pattern `\Bz\B` uses `\B` (non-word boundary) to ensure 'z' is surrounded by word characters.
3. `re.search` looks for this pattern in the input text.
4. If found, return 'Found a match!'; otherwise, return 'Not matched!'.
5. The pattern is correct for the re