def count_vowels(test_str):
  res = 0
  vow_list = ['a', 'e', 'i', 'o', 'u']
  for idx in range(1, len(test_str) - 1):
    if test_str[idx] not in vow_list and (test_str[idx - 1] in vow_list or test_str[idx + 1] in vow_list):
      res += 1
  if test_str[0] not in vow_list and test_str[1] in vow_list:
    res += 1
  if test_str[-1] not in vow_list and test_str[-2] in vow_list:
    res += 1
  return (res) 
The following is chain of thought:
Here's the structured chain of thought for the count_vowels function:

1. **Initialize counter**: Set up a result variable `res` to count qualifying characters, starting at 0

2. **Define vowels**: Create a list `vow_list` containing all vowel characters ['a', 'e', 'i', 'o', 'u']

3. **Process middle characters**: Iterate through characters from index 1 to len-2 (excluding first and last characters)
   - Check if current character is NOT a vowel
   - Check if either the previous character OR the next character is a vowel
   - If both conditions are met, increment the counter

4. **Process first character**: Handle edge case for the first character
   - Check if first character is NOT a vowel
   - Check if the second character is a vowel
   - If both conditions are met, increment the counter

5. **Process last character**: Handle edge case for the last character
   - Check if last character is NOT a vowel
   - Check if the second-to-last character is a vowel
   - If both conditions are met,