CodeGeneration:
at the shortest list length, which is appropriate for this use case).
   - Returns empty list if no common elements found.
   - Handles all data types that support equality comparison.

The implementation is correct and complete for the given requirements.

```python
def extract_index_list(l1, l2, l3):
    """
    Extract elements from three lists that are equal at the same index.
    
    Args:
        l1 (list): First input list
        l2 (list): Second input list  
        l3 (list): Third input list
        
    Returns:
        list: Elements that are equal at the same index in all three lists
        
    Examples:
        >>> extract_index_list([1, 1, 3, 4, 5, 6], [0, 1, 2, 3, 4], [1, 1, 3, 3, 5, 6])
        [1, 3]
        >>> extract_index_list([1, 2, 3], [1, 2, 3], [1, 2, 3])
        [1, 2, 3]
        >>> extract_index_list([1, 2], [3, 4], [5, 6])
        []
    """
    result = []
    for m, n, o in zip(l1, l2, l3):
        if (m == n == o):
            result.append(m)
    return result
```
