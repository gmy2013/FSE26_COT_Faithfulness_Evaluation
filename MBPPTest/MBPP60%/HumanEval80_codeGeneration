CodeGeneration:
larger than sqrt(n) would have a corresponding factor smaller than sqrt(n) that would have been found earlier.

Here is the complete function with the docstring:

```python
def smallest_Divisor(n):
    """
    Returns the smallest divisor (greater than 1) of the given integer n.
    
    Args:
        n (int): The integer to find the smallest divisor for.
        
    Returns:
        int: The smallest divisor of n (greater than 1). If n is prime, returns n itself.
        
    Examples:
        >>> smallest_Divisor(15)
        3
        >>> smallest_Divisor(17)
        17
        >>> smallest_Divisor(4)
        2
    """
    if n < 2:
        raise ValueError("Input must be an integer greater than 1")
    
    if n % 2 == 0:
        return 2
    
    i = 3
    while i * i <= n:
        if n % i == 0:
            return i
        i += 2
    
    return n
```

The function includes:
1. Input validation to ensure n is at least 2
2. Special case for even numbers (returns 2 immediately)
3. Efficient checking of odd divisors up to âˆšn
4. Returns n itself if no divisors are found (indicating n is prime)
