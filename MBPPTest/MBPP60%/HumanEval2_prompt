def get_ludic(n):
	ludics = []
	for i in range(1, n + 1):
		ludics.append(i)
	index = 1
	while(index != len(ludics)):
		first_ludic = ludics[index]
		remove_index = index + first_ludic
		while(remove_index < len(ludics)):
			ludics.remove(ludics[remove_index])
			remove_index = remove_index + first_ludic - 1
		index += 1
	return ludics
The following is chain of thought:
1. **Initialize the list**: Start by creating a list `ludics` containing all integers from 1 to n.
2. **Set starting index**: Begin with `index = 1` (the second element, since indexing starts at 0).
3. **Iterate while valid index**: Continue processing until `index` reaches the end of the list.
4. **Get current ludic number**: At each step, retrieve the number at `ludics[index]` as `first_ludic`.
5. **Calculate removal index**: The first element to remove is at `index + first_ludic`.
6. **Remove multiples*