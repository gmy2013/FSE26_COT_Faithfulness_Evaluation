def check_Even_Parity(x): 
    parity = 0
    while (x != 0): 
        x = x & (x - 1) 
        parity += 1
    if (parity % 2 == 0): 
        return True
    else: 
        return False
The following is chain of thought:
Here is the structured chain of thought for the given function:

1. **Initialize parity counter**: Start with `parity = 0` to count the number of set bits (1s) in the binary representation of `x`.

2. **Count set bits using Brian Kernighan's algorithm**:
   - Use a while loop that continues until `x` becomes 0.
   - In each iteration, perform `x = x & (x - 1)`, which clears the least significant set bit (turns the rightmost 1 to 0).
   - Increment `parity` by 1 each time a set bit is cleared.

3. **Check for even parity**:
   - After counting all set bits, chec