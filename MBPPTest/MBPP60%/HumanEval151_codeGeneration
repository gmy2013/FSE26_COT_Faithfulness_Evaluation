CodeGeneration:
to n, compute each value using the recurrence relation: `dp[i] = dp[i-1] + 2 * dp[i-2]`.
4. Finally, return `dp[n]`.

Here is the complete function:

```python
def jacobsthal_num(n): 
    dp = [0] * (n + 1) 
    dp[0] = 0
    dp[1] = 1
    for i in range(2, n+1): 
        dp[i] = dp[i - 1] + 2 * dp[i - 2] 
    return dp[n]
```
