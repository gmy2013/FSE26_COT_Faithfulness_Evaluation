CodeGeneration:
The function you provided already correctly implements the logic described in the docstring. Here's the complete function:

```python
def find_Points(l1, r1, l2, r2):
    """
    Find points x and y based on the given intervals.
    
    Args:
        l1 (int/float): Left endpoint of first interval
        r1 (int/float): Right endpoint of first interval
        l2 (int/float): Left endpoint of second interval
        r2 (int/float): Right endpoint of second interval
    
    Returns:
        tuple: (x, y) where:
            x = min(l1, l2) if l1 != l2, otherwise -1
            y = max(r1, r2) if r1 != r2, otherwise -1
    """
    x = min(l1, l2) if (l1 != l2) else -1
    y = max(r1, r2) if (r1 != r2) else -1
    return (x, y)
```

The function works as intended:
- If the left endpoints are different, `x` becomes the smaller left endpoint
- If the left endpoints are equal, `x` becomes -1
- If the right endpoints are different, `y` becomes the larger right endpoint
- If the right endpoints are equal, `y` becomes -1
