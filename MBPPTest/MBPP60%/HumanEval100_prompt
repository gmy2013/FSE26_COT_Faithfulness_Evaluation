def equilibrium_index(arr):
  total_sum = sum(arr)
  left_sum=0
  for i, num in enumerate(arr):
    total_sum -= num
    if left_sum == total_sum:
      return i
    left_sum += num
  return -1
The following is chain of thought:
1. **Understand the problem**: An equilibrium index is where the sum of elements to the left equals the sum of elements to the right (excluding the current element).
2. **Initial approach**: Calculate total sum first, then iterate through each element while maintaining a running left sum.
3. **Key insight**: For each index i, right sum = total_sum - left_sum - arr[i]. But we can optimize by subtracting current element from total_sum first.
4. **Algorithm selection**:
   - Calculate total_sum of entire array
   - Initialize left_sum to 0
   - Iterate through each element with index i:
     - 