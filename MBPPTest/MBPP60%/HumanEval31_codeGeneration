CodeGeneration:
at are not zero.
4. Append zeros: Use `extend` to add the zeros from `a` to the end of `x`.
5. Return result: Return the modified list `x`.

Here is the complete function with the docstring:

```python
def move_zero(num_list):
    """
    Move all zeros in the given list to the end while maintaining the order of non-zero elements.

    Args:
        num_list (list): A list of integers.

    Returns:
        list: A new list with all zeros moved to the end, and non-zero elements in their original order.

    Examples:
        >>> move_zero([0, 1, 0, 3, 12])
        [1, 3, 12, 0, 0]
        >>> move_zero([1, 7, 0, 0, 8, 0, 10])
        [1, 7, 8, 10, 0, 0, 0]
    """
    a = [0 for i in range(num_list.count(0))]
    x = [i for i in num_list if i != 0]
    x.extend(a)
    return x
```
