def harmonic_sum(n):
  if n < 2:
    return 1
  else:
    return 1 / n + (harmonic_sum(n - 1))
The following is chain of thought:
The function `harmonic_sum(n)` computes the sum of the harmonic series from 1 to n (i.e., 1 + 1/2 + 1/3 + ... + 1/n) using recursion.

**Chain of Thought:**
1. **Base Case:** When n < 2 (i.e., n=1), the harmonic sum is 1. This terminates the recursion.
2. **Recursive Case:** For n >= 2, the function returns 1/n plus the harmonic sum of n-1. This breaks the problem into smaller subproblems.
3. **Recursion Unfolding:** Each recursive call adds the reciprocal of the current n to the sum of all smaller terms.
4. **Termination:** The recursion bottoms out at n=1,