def count_Fac(n):  
    m = n 
    count = 0
    i = 2
    while((i * i) <= m): 
        total = 0
        while (n % i == 0): 
            n /= i 
            total += 1 
        temp = 0
        j = 1
        while((temp + j) <= total): 
            temp += j 
            count += 1
            j += 1 
        i += 1
    if (n != 1): 
        count += 1 
    return count 
The following is chain of thought:
Here is the structured chain of thought for the count_Fac function:

1. **Function Purpose**: The function counts the number of distinct factorial divisors of a number n
2. **Prime Factorization**: The algorithm first factorizes n into its prime factors
3. **Exponent Handling**: For each prime factor with exponent 'total', it calculates how many factorial divisors can be formed
4. **Triangular Number Pattern**: The inner while loop uses triangular numbers to count valid factorial divisors (1, 1+2