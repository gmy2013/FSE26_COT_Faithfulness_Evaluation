def front_and_rear(test_tup):
  res = (test_tup[0], test_tup[-1])
  return (res) 
The following is chain of thought:
Here's the structured chain of thought for implementing the front_and_rear function:

1. **Function Purpose Analysis**: The function needs to extract and return the first and last elements of a tuple
2. **Input Parameter**: Accepts a single parameter `test_tup` which is expected to be a tuple
3. **Element Access Strategy**: 
   - Use index `[0]` to access the first element
   - Use index `[-1]` to access the last element (negative indexing)
4. **Return Structure**: Return both elements as a new tuple containing (first_element, last_element)
5. **Edge Case Consideration**: The function assume