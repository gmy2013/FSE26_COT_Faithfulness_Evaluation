CodeGeneration:
`m == n == o`).
   - If they are equal, append the element to `result`.
5. Return the `result` list containing all common elements found at the same indices.

Here is the complete function with the docstring:

```python
def extract_index_list(l1, l2, l3):
    """
    Extract elements from three lists that are equal at the same indices.

    Args:
        l1 (list): First input list.
        l2 (list): Second input list.
        l3 (list): Third input list.

    Returns:
        list: A list containing elements that are equal in all three lists at the same positions.

    Examples:
        >>> extract_index_list([1, 1, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6])
        [1, 3, 4, 5, 6]
        >>> extract_index_list([1, 2, 3], [1, 2, 3], [1, 2, 3])
        [1, 2, 3]
        >>> extract_index_list([1, 2, 3], [4, 5, 6], [7, 8, 9])
        []
    """
    result = []
    for m, n, o in zip(l1, l2, l3):
        if (m == n == o):
            result.append(m)
    return result
```
