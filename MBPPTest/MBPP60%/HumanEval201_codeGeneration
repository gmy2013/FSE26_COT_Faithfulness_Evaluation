CodeGeneration:
Here's the completed function with improved edge case handling:

```python
def count_Rotation(arr, n):
    """
    Count the number of rotations in a rotated sorted array.
    
    Args:
        arr: List of integers representing a rotated sorted array
        n: Length of the array
    
    Returns:
        int: Number of rotations (0 if array is not rotated or empty)
    
    Example:
        >>> count_Rotation([15, 18, 2, 3, 6, 12], 6)
        2
        >>> count_Rotation([1, 2, 3, 4, 5], 5)
        0
    """
    # Handle edge cases: empty array or single element
    if n <= 1:
        return 0
    
    for i in range(1, n): 
        if arr[i] < arr[i - 1]: 
            return i  
    
    return 0
```

The function now includes:
- Proper docstring with parameter descriptions and examples
- Edge case handling for empty arrays and single-element arrays
- The same efficient O(n) approach to find the rotation point
- Returns 0 when the array is not rotated or has insufficient elements
