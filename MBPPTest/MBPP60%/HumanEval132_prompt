def find_first_occurrence(A, x):
    (left, right) = (0, len(A) - 1)
    result = -1
    while left <= right:
        mid = (left + right) // 2
        if x == A[mid]:
            result = mid
            right = mid - 1
        elif x < A[mid]:
            right = mid - 1
        else:
            left = mid + 1
    return result
The following is chain of thought:
1. Initialize `left` to 0 and `right` to the last index of the array.
2. Initialize `result` to -1 to handle the case where the element is not found.
3. Enter a while loop that continues as long as `left` <= `right`.
4. Calculate the middle index `mid` using integer division.
5. Check if the element at `mid` equals the target `x`:
   - If true, update `result` to `mid` and search left half by setting `right = mid - 1`