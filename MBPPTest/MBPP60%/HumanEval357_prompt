def int_to_roman( num):
        val = [1000, 900, 500, 400,100, 90, 50, 40,10, 9, 5, 4,1]
        syb = ["M", "CM", "D", "CD","C", "XC", "L", "XL","X", "IX", "V", "IV","I"]
        roman_num = ''
        i = 0
        while  num > 0:
            for _ in range(num // val[i]):
                roman_num += syb[i]
                num -= val[i]
            i += 1
        return roman_num
The following is chain of thought:
1. The function `int_to_roman` converts an integer `num` to a Roman numeral string.
2. Two lists are defined: `val` containing integer values in descending order, and `syb` containing corresponding Roman numeral symbols.
3. Initialize an empty string `roman_num` to build the result.
4. Initialize index `i` to 0 to traverse the lists.
5. Use a while loop that continues as long as `num` is greater than 0.
6. Inside the loop, for each value in `val` at index `i`, calculate how many times it fits into the current `num` using integer division.
7. For each occu