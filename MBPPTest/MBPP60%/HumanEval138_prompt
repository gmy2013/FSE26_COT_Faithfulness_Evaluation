import math 
def find_Index(n): 
    x = math.sqrt(2 * math.pow(10,(n - 1))); 
    return round(x); 
The following is chain of thought:
1. The function `find_Index(n)` aims to find the smallest integer `m` such that the triangular number `T_m = m(m+1)/2` has at least `n` digits.
2. The number of digits of a positive integer `k` is given by `floor(log10(k)) + 1`.
3. For `T_m` to have at least `n` digits: `T_m >= 10^(n-1)`.
4. Since `T_m ≈ m²/2` for large `m`, we can approximate: `m²/2 >= 10^(n-1)`.
5. Solving for `m`: `m >= sqrt(2 * 10^(n-1))`.
6. The function computes `x = sqrt(2 * 10^(n-1))` and rounds it to the nearest integer.
7. However, due to the approximation, we should verify if this rounded value indeed gives a triangular number with at least `n