import math 
def count_Divisors(n) : 
    count = 0
    for i in range(1, (int)(math.sqrt(n)) + 2) : 
        if (n % i == 0) : 
            if( n // i == i) : 
                count = count + 1
            else : 
                count = count + 2
    if (count % 2 == 0) : 
        return ("Even") 
    else : 
        return ("Odd") 
The following is chain of thought:
1. **Understand the function purpose**: The function determines if the number of divisors of `n` is even or odd.
2. **Initialize divisor count**: Start with `count = 0`.
3. **Iterate up to sqrt(n)**: Divisors come in pairs (i, n//i). Only need to check up to sqrt(n).
   - Range from 1 to int(math.sqrt(n)) + 1 (inclusive). The +2 in code is to ensure coverage (but +1 is sufficient).
4. **Check for divisor**: If `i` divides `n` (n % i == 0):
   - If `i` and `n//i` are equal (perfect square divisor), add 1 to count.
   - Otherwise, add 2 (for the pair).
5. **Determine even/odd**: After counting, c