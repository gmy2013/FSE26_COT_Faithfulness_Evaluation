CodeGeneration:
```python
def get_closest_vowel(word):
    """You are given a word. Your task is to find the closest vowel that stands between 
    two consonants from the right side of the word (case sensitive).
    
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't
    find any vowel met the above condition. 

    You may assume that the given string contains English letter only.

    Example:
    get_closest_vowel("yogurt") ==> "u"
    get_closest_vowel("FULL") ==> "U"
    get_closest_vowel("quick") ==> ""
    get_closest_vowel("ab") ==> ""
    """
    vowels = "aeiouAEIOU"
    
    # Reverse the word to process from right side
    reversed_word = word[::-1]
    
    # Iterate through each character from the right (now left after reversal)
    for i in range(1, len(reversed_word) - 1):
        current_char = reversed_word[i]
        
        # Check if current character is a vowel
        if current_char in vowels:
            # Check if both adjacent characters are consonants (not vowels)
            left_char = reversed_word[i - 1]
            right_char = reversed_word[i + 1]
            
            if left_char not in vowels and right_char not in vowels:
                return current_char
    
    return ""
```
