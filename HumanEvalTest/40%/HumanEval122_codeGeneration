CodeGeneration:
ts. For positive numbers: 1 to 99 (inclusive). For negative numbers: -1 to -99 (inclusive). Zero (0) has one digit and should be included.

 So we can check: if abs(x) < 100 and x != 0? But wait, zero should be included (it has one digit). Actually, we can check: if -99 <= x <= 99.

 However, note that numbers like 100 are three digits (not included), and -100 is also three digits (not included). So the condition is indeed: if the number is between -99 and 99 inclusive.

 Steps:
 1. Take the first k elements from arr.
 2. For each number in these k elements, check if it is between -99 and 99 (inclusive).
 3. Sum all such numbers.

 Let's code accordingly.
```python
def add_elements(arr, k):
    """
    Given a non-empty array of integers arr and an integer k, return
    the sum of the elements with at most two digits from the first k elements of arr.

    Example:

        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4
        Output: 24 # sum of 21 + 3

    Constraints:
        1. 1 <= len(arr) <= 100
        2. 1 <= k <= len(arr)
    """
    total = 0
    for i in range(k):
        num = arr[i]
        if -99 <= num <= 99:
            total += num
    return total
```
