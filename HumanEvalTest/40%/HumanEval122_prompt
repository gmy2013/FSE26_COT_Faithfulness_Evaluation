
def add_elements(arr, k):
    """
    Given a non-empty array of integers arr and an integer k, return
    the sum of the elements with at most two digits from the first k elements of arr.

    Example:

        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4
        Output: 24 # sum of 21 + 3

    Constraints:
        1. 1 <= len(arr) <= 100
        2. 1 <= k <= len(arr)
    """

The following is chain of thought:
We are given an array `arr` and an integer `k`.
 We need to consider the first `k` elements of the array.
 For each of these elements, we check if it has at most two digits (i.e., between -99 and 99 inclusive, but note the problem says integers and non-empty array).
 However, note the example: 111 (three digits) is skipped, 21 (two digits) is included, 3 (one digit) is included, 4000 (four digits) is skipped.
 So we are to include numbers that are between -99 and 99 (inclusive) but note that negative numbers with two digits (like -10) should also be included? The problem says "at most two digits", which for negative numbers would be the same absolute value condition.

 Actually, the problem says "at most two digits", meaning the number has either one or two digi