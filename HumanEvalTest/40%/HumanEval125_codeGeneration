CodeGeneration:
on commas and return the list.
3. If no whitespace and no commas, count the number of lower-case letters that have an odd position in the alphabet (where 'a' is position 0, 'b' is 1, etc.) and return that count.

Here's the implementation:

```python
def split_words(txt):
    '''
    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you
    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the
    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25
    Examples
    split_words("Hello world!") ➞ ["Hello", "world!"]
    split_words("Hello,world!") ➞ ["Hello", "world!"]
    split_words("abcdef") == 3 
    '''
    if ' ' in txt:
        return txt.split()
    elif ',' in txt:
        return txt.split(',')
    else:
        count = 0
        for char in txt:
            if char.islower():
                # ord('a') = 97, so subtract 97 to get position (0-25)
                position = ord(char) - ord('a')
                if position % 2 == 1:  # odd position
                    count += 1
        return count
```
