

def derivative(xs: list):
    """ xs represent coefficients of a polynomial.
    xs[0] + xs[1] * x + xs[2] * x^2 + ....
     Return derivative of this polynomial in the same form.
    >>> derivative([3, 1, 2, 4, 5])
    [1, 4, 12, 20]
    >>> derivative([1, 2, 3])
    [2, 6]
    """

The following is chain of thought:
Let's break down the problem step by step:

1. The polynomial is represented by a list of coefficients `xs`, where the index represents the exponent.
   - For example: [3, 1, 2, 4, 5] means 3*x^0 + 1*x^1 + 2*x^2 + 4*x^3 + 5*x^4.

2. To compute the derivative of a polynomial term:
   - The derivative of a term `c * x^n` is `(c * n) * x^(n-1)`.
   - The constant term (n=0) becomes 0 and is omitted.

3. Implementation steps:
   - Iterate over each coefficient starting from index 1 (since the constant term derivative is 0).
   - For each coefficient at index `i` (which corresponds to x^i), the derivative term is `xs[i] * i` at exponent `i-1`.
   - Construct a new list where the j-th eleme