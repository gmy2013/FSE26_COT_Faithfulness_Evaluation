
def total_match(lst1, lst2):
    '''
    Write a function that accepts two lists of strings and returns the list that has 
    total number of chars in the all strings of the list less than the other list.

    if the two lists have the same number of chars, return the first list.

    Examples
    total_match([], []) ➞ []
    total_match(['hi', 'admin'], ['hI', 'Hi']) ➞ ['hI', 'Hi']
    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) ➞ ['hi', 'admin']
    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) ➞ ['hI', 'hi', 'hi']
    total_match(['4'], ['1', '2', '3', '4', '5']) ➞ ['4']
    '''

The following is chain of thought:
To solve this problem, we need to compare two lists of strings and determine which list has a smaller total number of characters across all its strings. If both lists have the same total number of characters, we return the first list.

**Approach:**
1. Calculate the total number of characters in `lst1` by summing the lengths of all strings in the list.
2. Similarly, calculate the total number of characters in `lst2`.
3. Compare the two totals:
   - If the total of `lst1` is less than that of `lst2`, return `lst1`.
   - If the total of `lst2` is less than that of `lst1`, return `lst2`.
   - If they are equal, return `lst1` (the first list).

**Edge Cases:**
- If both lists are