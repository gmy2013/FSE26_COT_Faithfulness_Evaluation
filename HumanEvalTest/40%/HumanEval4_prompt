from typing import List


def mean_absolute_deviation(numbers: List[float]) -> float:
    """ For a given list of input numbers, calculate Mean Absolute Deviation
    around the mean of this dataset.
    Mean Absolute Deviation is the average absolute difference between each
    element and a centerpoint (mean in this case):
    MAD = average | x - x_mean |
    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])
    1.0
    """

The following is chain of thought:
To implement the mean_absolute_deviation function, I need to:
1. Calculate the mean of the input numbers
2. Compute the absolute difference between each number and the mean
3. Calculate the average of these absolute differences

The steps are:
- Find the mean b