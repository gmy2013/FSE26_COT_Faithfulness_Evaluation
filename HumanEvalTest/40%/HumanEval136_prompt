
def largest_smallest_integers(lst):
    '''
    Create a function that returns a tuple (a, b), where 'a' is
    the largest of negative integers, and 'b' is the smallest
    of positive integers in a list.
    If there is no negative or positive integers, return them as None.

    Examples:
    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)
    largest_smallest_integers([]) == (None, None)
    largest_smallest_integers([0]) == (None, None)
    '''

The following is chain of thought:
Let's break down the problem step by step:

1. We need to find two values:
   - `a`: the largest negative integer (closest to zero)
   - `b`: the smallest positive integer (closest to zero)

2. If there are no negative integers, `a` should be `None`.
3. If there are no positive integers, `b` should be `None`.

Approach:
- Initialize two variables: `largest_neg` and `smallest_pos`.
- Iterate through each number in the list.
- For negative numbers (x < 0):
  - If `largest_neg` is None or x is greater than `largest_neg` (since -3 > -5), update `largest_neg`.
- For positive numbers (x > 0):
  - If `smallest_pos` is None or x is less than `smallest_pos`, update `smallest_pos`.
- Return a tuple (`largest_neg`, `smallest_pos`)