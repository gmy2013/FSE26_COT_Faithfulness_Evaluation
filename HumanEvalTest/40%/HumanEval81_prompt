
def numerical_letter_grade(grades):
    """It is the last week of the semester and the teacher has to give the grades
    to students. The teacher has been making her own algorithm for grading.
    The only problem is, she has lost the code she used for grading.
    She has given you a list of GPAs for some students and you have to write 
    a function that can output a list of letter grades using the following table:
             GPA       |    Letter grade
              4.0                A+
            > 3.7                A 
            > 3.3                A- 
            > 3.0                B+
            > 2.7                B 
            > 2.3                B-
            > 2.0                C+
            > 1.7                C
            > 1.3                C-
            > 1.0                D+ 
            > 0.7                D 
            > 0.0                D-
              0.0                E
    

    Example:
    grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']
    """

The following is chain of thought:
We are given a list of GPAs and need to convert each to a letter grade based on the provided table.
 The table has ranges for each grade. Note that the table uses ">" for thresholds, meaning:
   - A+ is exactly 4.0
   - For others, the grade is assigned if the GPA is greater than the threshold and up to the next threshold.
 However, note the example: 3.0 is B+ but 3.0 is not greater than 3.0? Actually, the table says "> 3.0" for B+ meaning that if GPA is >3.0 and <=3.3? But wait, the table is not entirely clear.

 Let's interpret the table correctly. The table is usually read as:
   GPA >= 4.0 -> A+
   GPA >= 3.7 -> A   (but note: if >=4.0 it's already A+, so for A we require 3.7 <= GPA < 4.0)
   Similarly, GPA >= 3.3 -> A- (but 3.3 <= GPA < 3.7)
   and so on.

 However, the table says "> 3.7" for A, which might be ambiguous. But note the example: 3.5 is A-.
 So let's define the boundaries:

 Actually, the table uses ">" meaning strictly greater? But that would not include the threshold.
 However, the example input 3.0 is given and should be B+ (according to the example output for 3.0? Wait, the example input has 3 which is 3.0 and the output is 'B'? But wait the example output for 3 is 'B'. However, the table says for >3.0 is B+ and for >2.7 is B.

 This is confusing. Let's look at the example output:
   Input: [4.0, 3, 1.7, 2, 3.5] 
   Output: ['A+', 'B', 'C-', 'C', 'A-']

 So:
   4.0 -> A+
   3.0 -> B   (but according to the table, if we read ">3.0" for B+, then 3.0 is not greater than 3.0, so it would fall into the next category: >2.7 for B. So 3.0 is exactly at the threshold for B+? But the table doesn't include equality for the lower bound? How