CodeGeneration:
Here's the implementation:

```python
from typing import List


def rolling_max(numbers: List[int]) -> List[int]:
    """ From a given list of integers, generate a list of rolling maximum element found until given moment
    in the sequence.
    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])
    [1, 2, 3, 3, 3, 4, 4]
    """
    if not numbers:
        return []
    
    result = []
    current_max = numbers[0]
    
    for num in numbers:
        if num > current_max:
            current_max = num
        result.append(current_max)
    
    return result
```

The function works by:
1. Handling the edge case of an empty input list
2. Initializing the result list and setting the first element as the initial maximum
3. Iterating through each number, updating the current maximum when a larger number is found
4. Appending the current maximum to the result at each step
5. Returning the final list of rolling maximums

The example test case `[1, 2, 3, 2, 3, 4, 2]` correctly returns `[1, 2, 3, 3, 3, 4, 4]`.
