CodeGeneration:
Here's the implementation of the function:

```python
def double_the_difference(lst):
    '''
    Given a list of numbers, return the sum of squares of the numbers
    in the list that are odd. Ignore numbers that are negative or not integers.
    
    double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10
    double_the_difference([-1, -2, 0]) == 0
    double_the_difference([9, -2]) == 81
    double_the_difference([0]) == 0  
   
    If the input list is empty, return 0.
    '''
    total = 0
    for num in lst:
        # Check if it's an integer and non-negative
        if isinstance(num, int) and num >= 0:
            # Check if it's odd
            if num % 2 == 1:
                total += num * num
    return total
```

This implementation:
1. Initializes a total sum variable to 0
2. Iterates through each element in the list
3. Uses `isinstance(num, int)` to check if the number is an integer
4. Checks if the number is non-negative (`num >= 0`)
5. Checks if the number is odd (`num % 2 == 1`)
6. Adds the square of qualifying numbers to the total
7. Returns the total sum

The function handles all the test cases correctly and returns 0 for empty lists as specified.
