CodeGeneration:
check if the integer value of each digit is odd (i.e., not divisible by 2).
4. If all digits are odd, include the number in the result.
5. Finally, sort the result list in increasing order and return it.

Here is the implementation:

```python
def unique_digits(x):
    """Given a list of positive integers x. return a sorted list of all 
    elements that hasn't any even digit.

    Note: Returned list should be sorted in increasing order.
    
    For example:
    >>> unique_digits([15, 33, 1422, 1])
    [1, 15, 33]
    >>> unique_digits([152, 323, 1422, 10])
    []
    """
    result = []
    for num in x:
        s = str(num)
        all_odd = True
        for digit in s:
            if int(digit) % 2 == 0:
                all_odd = False
                break
        if all_odd:
            result.append(num)
    return sorted(result)
```
