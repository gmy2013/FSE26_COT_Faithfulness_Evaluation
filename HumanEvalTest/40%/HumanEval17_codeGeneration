CodeGeneration:
Here's the implementation:

```python
from typing import List


def parse_music(music_string: str) -> List[int]:
    """ Input to this function is a string representing musical notes in a special ASCII format.
    Your task is to parse this string and return list of integers corresponding to how many beats does each
    not last.

    Here is a legend:
    'o' - whole note, lasts four beats
    'o|' - half note, lasts two beats
    '.|' - quater note, lasts one beat

    >>> parse_music('o o| .| o| o| .| .| .| .| o o')
    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]
    """
    # Split the string into individual note symbols
    notes = music_string.split()
    
    # Map each note symbol to its corresponding beat duration
    beat_mapping = {
        'o': 4,
        'o|': 2,
        '.|': 1
    }
    
    # Convert each note to its beat duration
    return [beat_mapping[note] for note in notes]
```

The function works by:
1. Splitting the input string by spaces to get individual note symbols
2. Using a dictionary to map each symbol to its corresponding beat duration
3. Creating a list comprehension that converts each note symbol to its integer beat value

This implementation correctly handles the example case and any other valid input following the specified format.
