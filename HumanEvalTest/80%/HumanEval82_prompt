
def prime_length(string):
    """Write a function that takes a string and returns True if the string
    length is a prime number or False otherwise
    Examples
    prime_length('Hello') == True
    prime_length('abcdcba') == True
    prime_length('kittens') == True
    prime_length('orange') == False
    """

The following is chain of thought:
To solve this problem, we need to determine if the length of a given string is a prime number. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.

**Approach:**
1. Calculate the length of the input string.
2. Check if the length is less than 2. If so, return False (since primes are >=2).
3. For numbers >=2, check for divisibility from 2 up to the square root of the number (inclusive). If any divisor divides the number evenly, it is not prime.
4. Return True if no divisors are found (meaning it is prime), else False.

**Edge Cases:**
- String of length 0 or 1: not prime.
- String of length 2: prime (smallest prime).
- Even numbers greater than 2: not prime (except 2).

**Implementation:**
We'll iterate from 2 to sqrt(n) (converted to integer) to check for divisors. If n is divisible by any number in this range, it is not prime.