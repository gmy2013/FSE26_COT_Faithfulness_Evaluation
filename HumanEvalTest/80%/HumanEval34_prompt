

def unique(l: list):
    """Return sorted unique elements in a list
    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])
    [0, 2, 3, 5, 9, 123]
    """

The following is chain of thought:
To implement the `unique` function that returns sorted unique elements from a list, we need to:
1. Remove duplicate elements from the list
2. Sort the resulting elements in ascending order

The most efficient approach is to:
- Convert the list to a set to remove duplicates (since sets only contain unique elements)
- Convert the set back to a list and sort it
- Return the sorted list

Alternatively, we could use sorted() directly on the set without converting to a list first, as sorted() accepts any iterable.

Let's implement this solution:
```python
def unique(l: list):
    """R