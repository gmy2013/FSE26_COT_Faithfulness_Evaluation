CodeGeneration:
Here's the implementation of the `decimal_to_binary` function:

```python
def decimal_to_binary(decimal):
    """You will be given a number in decimal form and your task is to convert it to
    binary format. The function should return a string, with each character representing a binary
    number. Each character in the string will be '0' or '1'.

    There will be an extra couple of characters 'db' at the beginning and at the end of the string.
    The extra characters are there to help with the format.

    Examples:
    decimal_to_binary(15)   # returns "db1111db"
    decimal_to_binary(32)   # returns "db100000db"
    """
    binary_str = bin(decimal)[2:]
    return f"db{binary_str}db"
```

This implementation:
1. Uses Python's built-in `bin()` function to convert the decimal number to binary
2. Slices off the first two characters ('0b') using `[2:]`
3. Wraps the binary string with 'db' at both ends using an f-string
4. Handles all cases including zero (which becomes "db0db") correctly

The function will work for any non-negative integer input as expected.
