
def get_closest_vowel(word):
    """You are given a word. Your task is to find the closest vowel that stands between 
    two consonants from the right side of the word (case sensitive).
    
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't
    find any vowel met the above condition. 

    You may assume that the given string contains English letter only.

    Example:
    get_closest_vowel("yogurt") ==> "u"
    get_closest_vowel("FULL") ==> "U"
    get_closest_vowel("quick") ==> ""
    get_closest_vowel("ab") ==> ""
    """

The following is chain of thought:
1. Identify vowels: both lowercase and uppercase vowels 'aeiouAEIOU'
2. Reverse the word to process from the right side
3. Iterate through each character from the right (which is now left in reversed word)
4. For each vowel found, check if it's between two consonants (neighbors exist and are consonants)
5. Since we're processing from right, the first valid vowel we find will be the closest from right
6. Return the vowel if found, else empty string

Let's implement this logic:
- Reverse the word to start from the right end
- Skip first and last positions (vowels at boundaries don't count)
- Check each character between in