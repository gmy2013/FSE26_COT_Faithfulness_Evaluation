CodeGeneration:
Here's the implementation:

```python
from typing import List, Tuple


def sum_product(numbers: List[int]) -> Tuple[int, int]:
    """ For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.
    Empty sum should be equal to 0 and empty product should be equal to 1.
    >>> sum_product([])
    (0, 1)
    >>> sum_product([1, 2, 3, 4])
    (10, 24)
    """
    total = 0
    product = 1
    
    for num in numbers:
        total += num
        product *= num
    
    return (total, product)
```

This implementation:
- Initializes `total` to 0 and `product` to 1 (handling the empty list case)
- Iterates through each number, adding to the sum and multiplying to the product
- Returns the results as a tuple
- Works correctly for both empty and non-empty lists as specified in the docstring examples
