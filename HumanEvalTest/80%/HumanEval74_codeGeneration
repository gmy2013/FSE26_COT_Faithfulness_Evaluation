CodeGeneration:
Here's the implementation of the `total_match` function:

```python
def total_match(lst1, lst2):
    '''
    Write a function that accepts two lists of strings and returns the list that has 
    total number of chars in the all strings of the list less than the other list.

    if the two lists have the same number of chars, return the first list.

    Examples
    total_match([], []) ➞ []
    total_match(['hi', 'admin'], ['hI', 'Hi']) ➞ ['hI', 'Hi']
    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) ➞ ['hi', 'admin']
    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) ➞ ['hI', 'hi', 'hi']
    total_match(['4'], ['1', '2', '3', '4', '5']) ➞ ['4']
    '''
    total1 = sum(len(s) for s in lst1)
    total2 = sum(len(s) for s in lst2)
    
    if total1 <= total2:
        return lst1
    else:
        return lst2
```

This implementation:
1. Calculates the total number of characters in `lst1` by summing the length of each string
2. Calculates the total number of characters in `lst2` similarly
3. Returns `lst1` if its total is less than or equal to `lst2`'s total
4. Returns `lst2` if its total is greater than `lst1`'s total

The function handles all the test cases correctly, including empty lists and cases where totals are equal.
