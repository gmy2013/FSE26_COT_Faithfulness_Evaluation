CodeGeneration:
# Define the derivative coefficients
    deriv_coeffs = [i * xs[i] for i in range(1, n)]
    
    def df(x):
        return poly(deriv_coeffs, x)
    
    # Newton's method
    x0 = 0.0  # initial guess
    tolerance = 1e-10
    max_iter = 1000
    
    for _ in range(max_iter):
        fx = f(x0)
        dfx = df(x0)
        
        if abs(dfx) < tolerance:  # Avoid division by zero
            x0 += 0.1  # Perturb slightly and continue
            continue
            
        x1 = x0 - fx / dfx
        
        if abs(x1 - x0) < tolerance:
            return x1
            
        x0 = x1
    
    return x0  # Return best estimate after max iterations
```
