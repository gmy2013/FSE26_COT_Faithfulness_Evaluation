from typing import List


def has_close_elements(numbers: List[float], threshold: float) -> bool:
    """ Check if in given list of numbers, are any two numbers closer to each other than
    given threshold.
    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)
    False
    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)
    True
    """

The following is chain of thought:
To solve this problem, we need to check if there are any two numbers in the list that are closer to each other than the given threshold. The approach involves comparing each pair of distinct numbers to see if their absolute difference is less than the threshold.

Chain of thought:
1. We need to iterate through all pairs of numbers in the list. For each number at index i, compare it with every number at index j where j > i to avoid duplicate comparisons and self-comparison.
2. For each pair (numbers[i], numbers[j]), compute the absolute difference.
3. If any absolute difference is less than the threshold, return True immediately.
4. If no such pair is found after checking all, return False.

This approach efficiently checks all unique pairs without repetition. The time complexity is O(n^2) which is acceptable for small to medium lists.

Now, implementing th