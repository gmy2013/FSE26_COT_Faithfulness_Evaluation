
def next_smallest(lst):
    """
    You are given a list of integers.
    Write a function next_smallest() that returns the 2nd smallest element of the list.
    Return None if there is no such element.
    
    next_smallest([1, 2, 3, 4, 5]) == 2
    next_smallest([5, 1, 4, 3, 2]) == 2
    next_smallest([]) == None
    next_smallest([1, 1]) == None
    """

The following is chain of thought:
To solve this problem, we need to find the second smallest element in a list of integers. If there are fewer than two distinct elements (meaning the list has duplicates and only one distinct value, or the list has less than two elements), we should return None.

Approach:
1. If the list has less than 2 elements, return None.
2. Convert the list to a set to remove duplicates, then sort the unique values.
3. If the sorted unique list has at least two elements, the second element (index 1) is the second smallest.
4. Otherwise, return None.

Let's implement accordingly.
```python
def next_smallest(lst):
    if