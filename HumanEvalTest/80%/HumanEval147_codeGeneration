CodeGeneration:
I need to correct the calculation for `count1` in the test case. For n=5, `count0=2`, so `count1 = 5 - 2 = 3`.

Now compute:
C(2,3) = 0 (since 2 < 3)
C(3,3) = 1
Total = 0 + 1 = 1, which matches the example.

Here's the implementation:

```python
def get_max_triples(n):
    """
    You are given a positive integer n. You have to create an integer array a of length n.
        For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.
        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, 
    and a[i] + a[j] + a[k] is a multiple of 3.

    Example :
        Input: n = 5
        Output: 1
        Explanation: 
        a = [1, 3, 7, 13, 21]
        The only valid triple is (1, 7, 13).
    """
    count0 = (n + 1) // 3
    count1 = n - count0
    
    def comb3(x):
        if x < 3:
            return 0
        return x * (x - 1) * (x - 2) // 6
    
    return comb3(count0) + comb3(count1)
```
