
def solve(N):
    """Given a positive integer N, return the total sum of its digits in binary.
    
    Example
        For N = 1000, the sum of digits will be 1 the output should be "1".
        For N = 150, the sum of digits will be 6 the output should be "110".
        For N = 147, the sum of digits will be 12 the output should be "1100".
    
    Variables:
        @N integer
             Constraints: 0 ≤ N ≤ 10000.
    Output:
         a string of binary number
    """

The following is chain of thought:
To solve this problem, we need to compute the sum of the digits of a given positive integer N, and then return that sum in binary as a string. The steps are straightforward: first, calculate the sum of the digits of N, and then convert that sum to its binary representation without the '0b' prefix.

Chain of thought:
1. Convert N to a string to iterate over each digit.
2. For each digit character, convert it back to an integer and add it to a running total.
3. This total is the sum of the digits of N.
4. Convert this total to binary using bin(), which returns a string starting with '0b'.
5. Slice off the '0b' prefix to get the pure binary string.
6. Return the resultin