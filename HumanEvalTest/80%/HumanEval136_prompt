
def largest_smallest_integers(lst):
    '''
    Create a function that returns a tuple (a, b), where 'a' is
    the largest of negative integers, and 'b' is the smallest
    of positive integers in a list.
    If there is no negative or positive integers, return them as None.

    Examples:
    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)
    largest_smallest_integers([]) == (None, None)
    largest_smallest_integers([0]) == (None, None)
    '''

The following is chain of thought:
We are given a list `lst`. We need to find:
1. The largest negative integer (closest to zero among negatives), or None if there are no negatives.
2. The smallest positive integer (closest to zero among positives), or None if there are no positives.

Steps:
1. Initialize two variables: 
   - `largest_neg` to store the largest negative (start with None, meaning we haven't found any).
   - `smallest_pos` to store the smallest positive (start with None).

2. Iterate through each number in the list.
   - For each number:
     a. If the number is negative (less than 0):
        - If `largest_neg` is None, set it to the number.
        - Else, compare the number with `largest_neg`: since we want the largest (closest to zero) negative, we are looking for the maximum among negatives. So if the number is greater than `largest_neg` (because -3 > -5), update `largest_neg`.
     b. If the number is positive (greater than 0):
        - If `smallest_pos` is None, set it to the number.
        - Else, compare the number with `smallest_pos`: we want the smallest positive, so if the number is less than `smallest_pos`, update `smallest_pos`.

3. After processing all numbers, return a tuple (`largest_neg`, `smallest_pos`).

Edge cases:
- Empty list: both will be None.
- List with zeros: zeros are neither negative nor positive, so they are ignored.

Let's code accordingly.
```python
def largest_smallest_integers(lst):
    '''
    Create a function that returns a tuple (a, b), where 'a' is
    the largest of negative integers, and 'b' is the smallest
    of positive integers in a list.
    If there is no negative or positive integers, return them as None.

    Examples:
    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)
    largest_smallest_integers([]) == (None, None)
    largest_smallest_integers([0]) == (None, None)
    '''
    largest_neg = None
    smallest_p