CodeGeneration:
Here's the implementation of the function:

```python
def double_the_difference(lst):
    '''
    Given a list of numbers, return the sum of squares of the numbers
    in the list that are odd. Ignore numbers that are negative or not integers.
    
    double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10
    double_the_difference([-1, -2, 0]) == 0
    double_the_difference([9, -2]) == 81
    double_the_difference([0]) == 0  
   
    If the input list is empty, return 0.
    '''
    total = 0
    for num in lst:
        # Check if the number is an integer, non-negative, and odd
        if isinstance(num, int) and num >= 0 and num % 2 != 0:
            total += num * num
    return total
```

This implementation:
1. Initializes a total sum variable to 0
2. Iterates through each number in the input list
3. Checks if the number is an integer, non-negative, and odd
4. If all conditions are met, adds the square of the number to the total
5. Returns the total sum

The function handles edge cases like empty lists, negative numbers, non-integers, and even numbers correctly by ignoring them as specified.
