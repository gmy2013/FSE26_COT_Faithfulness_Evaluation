from typing import List


def sort_numbers(numbers: str) -> str:
    """ Input is a space-delimited string of numberals from 'zero' to 'nine'.
    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.
    Return the string with numbers sorted from smallest to largest
    >>> sort_numbers('three one five')
    'one three five'
    """

The following is chain of thought:
We are given a string of space-delimited number words. We need to sort them numerically from smallest to largest.
 Steps:
 1. Split the input string into a list of words.
 2. Map each word to its corresponding numerical value (e.g., 'zero' -> 0, 'one' -> 1, ... 'nine' -> 9).
 3. Sort the list of numerical values.
 4. Map the sorted numerical values back to their word representations.
 5. Join the sorted words into a space-delimited string and return.

 Implementation:
 We can create a dictionary to map the words to numbers and another to map numbers to words.
 Alternatively, we can have a list of words in order (index corresponds to number) for reverse mapping.

 Let's define:
 word_to_num = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}
 num_to_word = {0:'zero', 1:'one', 2: