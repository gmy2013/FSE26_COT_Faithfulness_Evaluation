CodeGeneration:
Here's the implementation of the function:

```python
def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """
    if len(array) == 0:
        return []
    if len(array) == 1:
        return array.copy()
    
    first = array[0]
    last = array[-1]
    total = first + last
    
    if total % 2 == 1:  # odd sum
        return sorted(array.copy())
    else:  # even sum
        return sorted(array.copy(), reverse=True)
```

This implementation follows the chain of thought:
1. Returns an empty list for empty arrays
2. Returns a copy of single-element arrays
3. For arrays with at least two elements, calculates the sum of first and last elements
4. Sorts in ascending order if the sum is odd, descending order if the sum is even
5. Always returns a copy to avoid modifying the original array
