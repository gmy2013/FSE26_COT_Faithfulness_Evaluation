CodeGeneration:
Here's the implementation of the function based on the requirements:

```python
def total_match(lst1, lst2):
    '''
    Write a function that accepts two lists of strings and returns the list that has 
    total number of chars in the all strings of the list less than the other list.

    if the two lists have the same number of chars, return the first list.

    Examples
    total_match([], []) ➞ []
    total_match(['hi', 'admin'], ['hI', 'Hi']) ➞ ['hI', 'Hi']
    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) ➞ ['hi', 'admin']
    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) ➞ ['hI', 'hi', 'hi']
    total_match(['4'], ['1', '2', '3', '4', '5']) ➞ ['4']
    '''
    # Calculate total characters in each list
    total1 = sum(len(s) for s in lst1)
    total2 = sum(len(s) for s in lst2)
    
    # Compare totals and return appropriate list
    if total1 <= total2:
        return lst1
    else:
        return lst2
```

This implementation:
1. Uses generator expressions to calculate the total character count for each list by summing the lengths of all strings
2. Compares the totals and returns lst1 if its total is less than or equal to lst2's total
3. Returns lst2 only when its total is strictly less than lst1's total
4. Handles the edge case of empty lists correctly (both will have total 0, so returns lst1 as specified)
