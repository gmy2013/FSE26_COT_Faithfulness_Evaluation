
def double_the_difference(lst):
    '''
    Given a list of numbers, return the sum of squares of the numbers
    in the list that are odd. Ignore numbers that are negative or not integers.
    
    double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10
    double_the_difference([-1, -2, 0]) == 0
    double_the_difference([9, -2]) == 81
    double_the_difference([0]) == 0  
   
    If the input list is empty, return 0.
    '''

The following is chain of thought:
Let's break down the problem step by step:

1. We need to process each number in the input list.
2. For each number, we must check:
   - Is it an integer? (ignore non-integers)
   - Is it non-negative? (ignore negatives)
   - Is it odd?
3. If all conditions are met, we square the number.
4. Sum all the valid squares.
5. Return 0 for empty list.

Conditions to ignore a number:
- Not an integer (e.g., float, string)
- Negative
- Even numbers are also ignored (we only want odd)

Implementation approach:
- Initialize a sum variable to 0.
- Iterate through each element in the list.
- For each element:
   - Check if it is an integer (using isinstance(x, int))
   - Check if it is non-negative (>= 0)
   - Check if i