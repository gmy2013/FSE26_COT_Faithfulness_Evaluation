from typing import List, Optional


def longest(strings: List[str]) -> Optional[str]:
    """ Out of list of strings, return the longest one. Return the first one in case of multiple
    strings of the same length. Return None in case the input list is empty.
    >>> longest([])

    >>> longest(['a', 'b', 'c'])
    'a'
    >>> longest(['a', 'bb', 'ccc'])
    'ccc'
    """

The following is chain of thought:
We are given a list of strings. We need to:
1. If the list is empty, return None.
2. Otherwise, find the longest string. If multiple strings have the same maximum length, return the first one.
3. We can iterate through the list, keeping track of the current longest string and its length.

Steps:
- Check if the list is empty -> return None.
- Initialize a variable to hold the current longest string (start with the first string).
- Iterate through the list (starting from the second element if exists).
- For each string, compare its length with the current longest.