
def unique_digits(x):
    """Given a list of positive integers x. return a sorted list of all 
    elements that hasn't any even digit.

    Note: Returned list should be sorted in increasing order.
    
    For example:
    >>> unique_digits([15, 33, 1422, 1])
    [1, 15, 33]
    >>> unique_digits([152, 323, 1422, 10])
    []
    """

The following is chain of thought:
Let's break down the problem step by step:

1. We need to check each number in the input list.
2. For each number, we need to examine all its digits.
3. If any digit is even (i.e., divisible by 2), we skip that number.
4. Only numbers with all odd digits should be included.
5. The result should be sorted in increasing order.

Implementation plan:
- Iterate through each number in the list.
- Convert the number to a string to easily access each digit.
- Check each digit: if any digit is even (i.e., int(digit) % 2 == 0), skip the number.
- Collect all numbers that pass 