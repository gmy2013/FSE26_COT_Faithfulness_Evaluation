
def fruit_distribution(s,n):
    """
    In this task, you will be given a string that represents a number of apples and oranges 
    that are distributed in a basket of fruit this basket contains 
    apples, oranges, and mango fruits. Given the string that represents the total number of 
    the oranges and apples and an integer that represent the total number of the fruits 
    in the basket return the number of the mango fruits in the basket.
    for examble:
    fruit_distribution("5 apples and 6 oranges", 19) ->19 - 5 - 6 = 8
    fruit_distribution("0 apples and 1 oranges",3) -> 3 - 0 - 1 = 2
    fruit_distribution("2 apples and 3 oranges", 100) -> 100 - 2 - 3 = 95
    fruit_distribution("100 apples and 1 oranges",120) -> 120 - 100 - 1 = 19
    """

The following is chain of thought:
We are given a string `s` that contains the number of apples and oranges, and an integer `n` that is the total number of fruits.
 The string `s` has the format: "<num1> apples and <num2> oranges", where <num1> and <num2> are integers.
 We need to extract the numbers of apples and oranges from the string, then subtract them from the total `n` to get the number of mangoes.

 Steps:
 1. Split the string to get the words and numbers.
 2. The first token should be the number of apples (as a string), then the word "apples", then "and", then the number of oranges, then "oranges".
 3. Convert the extracted numbers to integers.
 4. Subtract both from the total `n` to get the number of mangoes.

 Example: 
   s = "5 apples and 6 oranges" -> apples = 5, oranges = 6
   n = 19 -> mangoes = 19 - 5 - 6 = 8

 We can split the string by spaces and then take the first element for apples and the third element for oranges? 
 But note: the string might have numbers with multiple digits. Also, the first number is at index 0, and the second number is at index 3? 
 Actually, after splitting:
   ["5", "apples", "and", "6", "oranges"] -> indices: 0 and 3.

 However, what if the string has "0 apples and 1 oranges"? Then splitting gives:
   ["0", "apples", "and", "1", "oranges"] -> same indices.

 So we can rely on the structure: the first token is the apple count, and the fourth token is the orange count? 
 But wait: what if the string has extra spaces? The problem says the string is given in a specific format.

 Alternatively, we can split and then look for the numbers. Since the format is fixed, we can assume the first word is a number and the fourth word is a number.

 However, to be safe, we can also use a method that extracts all numbers from the string. Since there are exactly two numbers, we can get both.

 Let's extract all integers from the string. We can split the string and then check each token if it is a digit.

 Steps in code:
   tokens = s.split()
   numbers = []
   for token in tokens:
        if token.isdigit():
            numbers.append(int(token))

   Then we have two numbers: numbers[0] and numbers[1] (apples and oranges).

 But what if the string has no numbers? The problem states it has numbers.

 Then we can do:
   apples = numbers[0]
   oranges = numbers[1]

 Then mangoes = n - apples - oranges

 However, note: the example "0 apples and 1 oranges" has two numbers: 0 and 1.

 So we can write:
   tokens = s.split()
   numbers =