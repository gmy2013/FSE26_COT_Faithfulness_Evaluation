20%CoT
CodeGeneration:
```python
def rounded_avg(n, m):
    """You are given two positive integers n and m, and your task is to compute the
    average of the integers from n through m (including n and m). 
    Round the answer to the nearest integer and convert that to binary.
    If n is greater than m, return -1.
    Example:
    rounded_avg(1, 5) => "0b11"
    rounded_avg(7, 5) => -1
    rounded_avg(10, 20) => "0b1111"
    rounded_avg(20, 33) => "0b11010"
    """
    # Step 1: Check if n is greater than m
    if n > m:
        return -1
    
    # Step 2: Compute the sum of integers from n through m
    total_sum = sum(range(n, m + 1))
    
    # Step 3: Compute the count of integers from n through m
    count = m - n + 1
    
    # Step 4: Compute the average and round to nearest integer
    avg = round(total_sum / count)
    
    # Step 5: Convert the rounded average to binary
    binary_avg = bin(avg)
    
    return binary_avg
