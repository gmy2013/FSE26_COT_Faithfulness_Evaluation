20%CoT
CodeGeneration:
aracter in the string and check if it is uppercase. If it is, we will add its ASCII value to a running total.

2. **Plan the Solution:**
   - Initialize a variable `total` to 0 to keep track of the sum.
   - Loop through each character in the string `s`.
   - For each character, check if it is an uppercase letter using a condition like `char.isupper()`.
   - If it is uppercase, convert the character to its ASCII value using the `ord()` function and add this value to `total`.
   - After the loop, return the `total`.

3. **Implement the Code:**

```python
def digitSum(s):
    """Task
    Write a function that takes a string as input and returns the sum of the upper characters only'
    ASCII codes.

    Examples:
        digitSum("") => 0
        digitSum("abAB") => 131
        digitSum("abcCd") => 67
        digitSum("helloE") => 69
        digitSum("woArBld") => 131
        digitSum("aAaaaXa") => 153
    """
    total = 0
    for char in s:
        if char.isupper():
            total += ord(char)
    return total
```

4. **Test the Solution:**
   - Check the function with given examples to ensure it works as expected.
   - Test with additional edge cases, such as strings with no uppercase characters, all uppercase characters, and non-alphabet characters to ensure robustness.
