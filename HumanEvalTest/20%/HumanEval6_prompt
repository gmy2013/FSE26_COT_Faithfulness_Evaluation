from typing import List


def parse_nested_parens(paren_string: str) -> List[int]:
    """ Input to this function is a string represented multiple groups for nested parentheses separated by spaces.
    For each of the group, output the deepest level of nesting of parentheses.
    E.g. (()()) has maximum two levels of nesting while ((())) has three.

    >>> parse_nested_parens('(()()) ((())) () ((())()())')
    [2, 3, 1, 3]
    """

The following is chain of thought:
To solve the problem of finding the deepest level of nesting of parentheses in each group of a given string, we can use the following steps:

1. **Initialize a result list**: This list will store the maximum depth for each group of parentheses.

2. **S