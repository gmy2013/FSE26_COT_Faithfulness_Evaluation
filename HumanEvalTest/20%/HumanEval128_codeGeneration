20%CoT
CodeGeneration:
signs of the numbers.
3. Initialize a variable `sum_of_magnitudes` to 0, which will hold the sum of magnitudes of the numbers.
4. Iterate through each number in the array `arr`.
5. For each number, determine its sign (1 for positive, -1 for negative, and 0 for zero).
6. Multiply `product_of_signs` by the sign of the current number.
7. Add the magnitude (absolute value) of the current number to `sum_of_magnitudes`.
8. After the loop, return the product of `sum_of_magnitudes` and `product_of_signs`.

Here's the complete implementation of the function:

```python
def prod_signs(arr):
    """
    You are given an array arr of integers and you need to return
    sum of magnitudes of integers multiplied by product of all signs
    of each number in the array, represented by 1, -1 or 0.
    Note: return None for empty arr.

    Example:
    >>> prod_signs([1, 2, 2, -4]) == -9
    >>> prod_signs([0, 1]) == 0
    >>> prod_signs([]) == None
    """
    if not arr:
        return None
    
    product_of_signs = 1
    sum_of_magnitudes = 0
    
    for num in arr:
        if num > 0:
            sign = 1
        elif num < 0:
            sign = -1
        else:
            sign = 0
        
        product_of_signs *= sign
        sum_of_magnitudes += abs(num)
    
    return sum_of_magnitudes * product_of_signs
```
