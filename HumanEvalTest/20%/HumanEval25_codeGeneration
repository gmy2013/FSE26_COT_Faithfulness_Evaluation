20%CoT
CodeGeneration:
```python
def factorize(n: int) -> List[int]:
    """ Return list of prime factors of given integer in the order from smallest to largest.
    Each of the factors should be listed number of times corresponding to how many times it appears in factorization.
    Input number should be equal to the product of all factors.
    """
    factors = []
    
    # Handle smallest prime number 2 separately
    while n % 2 == 0:
        factors.append(2)
        n //= 2
    
    # Check for odd factors from 3 onwards
    factor = 3
    while factor * factor <= n:
        while n % factor == 0:
            factors.append(factor)
            n //= factor
        factor += 2
    
    # If n is still greater than 1, then it's a prime number larger than its square root
    if n > 1:
        factors.append(n)
    
    return factors
```

This function works by first handling the factor of 2 separately, since it is the only even prime number. For odd factors, it iterates starting from 3 and checks divisibility, appending the factor and dividing `n` by it until `n` is no longer divisible by that factor. After processing all factors up to the square root of `n`, if `n` is still greater than 1, it means `n` itself is prime, so it is added to the list.
