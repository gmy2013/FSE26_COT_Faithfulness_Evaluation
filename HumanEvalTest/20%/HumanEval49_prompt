

def modp(n: int, p: int):
    """Return 2^n modulo p (be aware of numerics).
    >>> modp(3, 5)
    3
    >>> modp(1101, 101)
    2
    >>> modp(0, 101)
    1
    >>> modp(3, 11)
    8
    >>> modp(100, 101)
    1
    """

The following is chain of thought:
1. **Understand the Problem:**  
   - We need to compute \(2^n \mod p\).
   - This requires calculating the power of 2 raised to the exponent \(n\), followed by computing the remainder when divided by \(p\).
   - The primary concern is dealing with very large numbers that arise from calculating \(2^n\).

2. *