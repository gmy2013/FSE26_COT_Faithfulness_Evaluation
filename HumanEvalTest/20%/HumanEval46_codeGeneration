20%CoT
CodeGeneration:
```python
def fib4(n: int):
    """The Fib4 number sequence is a sequence similar to the Fibonacci sequence that's defined as follows:
    fib4(0) -> 0
    fib4(1) -> 0
    fib4(2) -> 2
    fib4(3) -> 0
    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).
    Please write a function to efficiently compute the n-th element of the fib4 number sequence.  Do not use recursion.
    >>> fib4(5)
    4
    >>> fib4(6)
    8
    >>> fib4(7)
    14
    """
    
    # Base cases
    if n == 0:
        return 0
    if n == 1:
        return 0
    if n == 2:
        return 2
    if n == 3:
        return 0
    
    # Initialize a list to hold the first four terms
    fib4_values = [0, 0, 2, 0]
    
    # Compute the sequence iteratively for n >= 4
    for i in range(4, n + 1):
        next_value = fib4_values[-1] + fib4_values[-2] + fib4_values[-3] + fib4_values[-4]
        fib4_values.append(next_value)
        # Keep only the last four numbers to save space
        fib4_values.pop(0)
    
    return fib4_values[-1]
